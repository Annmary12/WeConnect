{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "business",
      "description": "Operations about business",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "reviews",
      "description": "Reviews about a particular business"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/businesses/": {
      "post": {
        "tags": [
          "business"
        ],
        "summary": "Add a new business",
        "description": "",
        "operationId": "addBusiness",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Business object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Business"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "business"
        ],
        "summary": "Update an existing business",
        "description": "",
        "operationId": "updateBusiness",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Business object that needs to be added to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Business"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Business not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/businesses?location={location}": {
      "get": {
        "tags": [
          "business"
        ],
        "summary": "Finds Businesses by location",
        "description": "#",
        "operationId": "findBusinessesByLocation",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "",
            "required": true,
            "type": "array",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Business"
              }
            }
          },
          "400": {
            "description": "Invalid location value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/businesses?category={category}": {
      "get": {
        "tags": [
          "business"
        ],
        "summary": "Finds Businesses by category",
        "description": "#",
        "operationId": "findBusinessesByCategory",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "",
            "required": true,
            "type": "array",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Business"
              }
            }
          },
          "400": {
            "description": "Invalid category value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },

    "/businesses/{businessId}": {
      "get": {
        "tags": [
          "business"
        ],
        "summary": "Find business by ID",
        "description": "Returns a single business",
        "operationId": "getBusinessById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "description": "ID of business to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Business"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Business not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "business"
        ],
        "summary": "Deletes a business",
        "description": "",
        "operationId": "deleteBusiness",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "businessId",
            "in": "path",
            "description": "Business id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Business not found"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/businesses": {
      "get": {
        "tags": [
          "business"
        ],
        "summary": "Fetch all businesses",
        "description": "Returns a list of all businesses",
        "operationId": "",
        "produces": [
          "application/xml",
          "application/json"
        ],
       
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Business"
            }
          },
        
          "404": {
            "description": "No business yet"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/businesses/businessId/reviews": {
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Post a review for a business",
        "description": "",
        "operationId": "businessId",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "post review for a business",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review Created Sucessfully",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          "400": {
            "description": "Business You want to review is not found"
          }
        }
      }
    },
    "/businesses/{businessId}/reviews": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Find reviews by business id",
        "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
        "operationId": "getReviewByBusinessId",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "description": "ID of business that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "list of reviews for this business",
            "schema": {
              "$ref": "#/definitions/Business"
            }
          },
          "400": {
            "description": "No review found for this business"
          },
          "404": {
            "description": "Business not found"
          }
        }
      }

    },
    "/auth/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates new user",
        "description": "This can only be done when you visit the app.",
        "operationId": "createUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessfully Registered"
          },
          "400": {
            "description": "Name Field is required"
          }
        }
        
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The email for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Hello Annmary Agunanna, Welcome to weConnect",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "You are not a register user"
          }
        }
      }
    }
   
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Review": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "cat": {
          "$ref": "#/definitions/Review"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "businessId": {
          "type": "integer",
          "format": "int64"
        },
       
        "content": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Review"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "cat": {
          "$ref": "#/definitions/User"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Business": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "cat": {
          "$ref": "#/definitions/Business"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}